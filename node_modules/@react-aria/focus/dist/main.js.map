{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;ACaD;;;;AAIO,SAASG,WAAT,CAAqBC,OAArB,EAA2C;AAChD;AACA;AACA;AACA;AACA;AACA,MAAIC,sBAAsB,OAAO,SAAjC,EAA4C;AAC1C,QAAIC,kBAAkB,GAAGC,QAAQ,CAACC,aAAlC;AACAC,IAAAA,kBAAkB,CAAC,MAAM;AACvB;AACA,UAAIF,QAAQ,CAACC,aAAT,KAA2BF,kBAA3B,IAAiDC,QAAQ,CAACG,QAAT,CAAkBN,OAAlB,CAArD,EAAiF;AAC/EO,QAAAA,qBAAqB,CAACP,OAAD,CAArB;AACD;AACF,KALiB,CAAlB;AAMD,GARD,MAQO;AACLO,IAAAA,qBAAqB,CAACP,OAAD,CAArB;AACD;AACF;;;;ACpCD;;;;;;;;;;;AAYA,SAASQ,+CAAT,CAAwBR,OAAxB,EAA0C;AACxC,MAAI,EAAEA,OAAO,YAAYS,WAArB,KAAqC,EAAET,OAAO,YAAYU,UAArB,CAAzC,EAA2E;AACzE,WAAO,KAAP;AACD;;AAED,MAAI;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAwBZ,OAAO,CAACa,KAApC;AAEA,MAAIC,SAAS,GACXH,OAAO,KAAK,MAAZ,IACAC,UAAU,KAAK,QADf,IAEAA,UAAU,KAAK,UAHjB;;AAMA,MAAIE,SAAJ,EAAe;AACb,UAAM;AAACC,MAAAA;AAAD,QAAqBf,OAAO,CAACgB,aAAR,CAAsBC,WAAjD;AACA,QAAI;AAACN,MAAAA,OAAO,EAAEO,eAAV;AAA2BN,MAAAA,UAAU,EAAEO;AAAvC,QAA6DJ,gBAAgB,CAACf,OAAD,CAAjF;AAEAc,IAAAA,SAAS,GACPI,eAAe,KAAK,MAApB,IACAC,kBAAkB,KAAK,QADvB,IAEAA,kBAAkB,KAAK,UAHzB;AAKD;;AAED,SAAOL,SAAP;AACD;;AAED,SAASM,mDAAT,CAA4BpB,OAA5B,EAA8CqB,YAA9C,EAAsE;AACpE,SACE,CAACrB,OAAO,CAACsB,YAAR,CAAqB,QAArB,CAAD,KACCtB,OAAO,CAACuB,QAAR,KAAqB,SAArB,IACCF,YADD,IAECA,YAAY,CAACE,QAAb,KAA0B,SAF3B,GAGGvB,OAAO,CAACsB,YAAR,CAAqB,MAArB,CAHH,GAIG,IALJ,CADF;AAQD;AAED;;;;;;;;AAMO,SAASE,oDAAT,CAA0BxB,OAA1B,EAA4CqB,YAA5C,EAAoE;AACzE,SACErB,OAAO,CAACuB,QAAR,KAAqB,UAArB,IACAf,+CAAc,CAACR,OAAD,CADd,IAEAoB,mDAAkB,CAACpB,OAAD,EAAUqB,YAAV,CAFlB,KAGC,CAACrB,OAAO,CAACyB,aAAT,IAA0BD,oDAAgB,CAACxB,OAAO,CAACyB,aAAT,EAAwBzB,OAAxB,CAH3C,CADF;AAMD;;ACPD,MAAM0B,kDAAY,gBAAGC,MAAK,CAACC,aAAN,CAAkC,IAAlC,CAArB;;AAEA,IAAIC,iDAAqC,GAAG,IAA5C;AACA,IAAIC,4CAAqC,GAAG,IAAIC,GAAJ,EAA5C,C,CAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AAOO,SAASC,UAAT,CAAoBC,KAApB,EAA4C;AACjD,MAAI;AAACC,IAAAA,QAAD;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA;AAAlC,MAA+CJ,KAAnD;AACA,MAAIK,QAAQ,GAAGC,MAAM,EAArB;AACA,MAAIC,MAAM,GAAGD,MAAM,EAAnB;AACA,MAAIE,QAAQ,GAAGF,MAAM,CAAgB,EAAhB,CAArB;AAEAG,EAAAA,eAAe,CAAC,MAAM;AACpB;AACA,QAAIC,IAAI,GAAGL,QAAQ,CAACM,OAAT,CAAiBC,WAA5B;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,WAAOH,IAAI,IAAIA,IAAI,KAAKH,MAAM,CAACI,OAA/B,EAAwC;AACtCE,MAAAA,KAAK,CAACC,IAAN,CAAWJ,IAAX;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACE,WAAZ;AACD;;AAEDJ,IAAAA,QAAQ,CAACG,OAAT,GAAmBE,KAAnB;AACAhB,IAAAA,4CAAM,CAACkB,GAAP,CAAWP,QAAX;AACA,WAAO,MAAM;AACXX,MAAAA,4CAAM,CAACmB,MAAP,CAAcR,QAAd;AACD,KAFD;AAGD,GAdc,EAcZ,CAACP,QAAD,CAdY,CAAf;AAgBAgB,EAAAA,yDAAmB,CAACT,QAAD,EAAWN,OAAX,CAAnB;AACAgB,EAAAA,qDAAe,CAACV,QAAD,EAAWL,YAAX,EAAyBD,OAAzB,CAAf;AACAiB,EAAAA,kDAAY,CAACX,QAAD,EAAWJ,SAAX,CAAZ;AAEA,MAAIgB,YAAY,GAAGC,wDAAkB,CAACb,QAAD,CAArC;AAEA,sBACE,qBAAC,kDAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEY;AAA9B,kBACE;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,GAAG,EAAEf;AAAlB,IADF,EAEGJ,QAFH,eAGE;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,GAAG,EAAEM;AAAlB,IAHF,CADF;AAOD;AAED;;;;;;;;;AAKO,SAASe,eAAT,GAAyC;AAC9C,SAAOC,UAAU,CAAC9B,kDAAD,CAAjB;AACD;;;;AAED,SAAS4B,wDAAT,CAA4Bb,QAA5B,EAAoF;AAClF,SAAO;AACLgB,IAAAA,SAAS,CAACC,IAAD,EAAiC;AAAA,UAAhCA,IAAgC;AAAhCA,QAAAA,IAAgC,GAAJ,EAAI;AAAA;;AACxC,UAAIC,KAAK,GAAGlB,QAAQ,CAACG,OAArB;AACA,UAAI;AAACgB,QAAAA,IAAD;AAAOC,QAAAA,QAAP;AAAiBC,QAAAA;AAAjB,UAAyBJ,IAA7B;AACA,UAAIf,IAAI,GAAGiB,IAAI,IAAIzD,QAAQ,CAACC,aAA5B;AACA,UAAI2D,QAAQ,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASK,sBAAxB;AACA,UAAIC,MAAM,GAAGC,sBAAsB,CAACC,kDAAY,CAACR,KAAD,CAAb,EAAsB;AAACE,QAAAA;AAAD,OAAtB,EAAkCF,KAAlC,CAAnC;AACAM,MAAAA,MAAM,CAACG,WAAP,GAAqBC,sDAAgB,CAAC1B,IAAD,EAAOgB,KAAP,CAAhB,GAAgChB,IAAhC,GAAuCoB,QAA5D;AACA,UAAIO,QAAQ,GAAGL,MAAM,CAACK,QAAP,EAAf;;AACA,UAAI,CAACA,QAAD,IAAaR,IAAjB,EAAuB;AACrBG,QAAAA,MAAM,CAACG,WAAP,GAAqBL,QAArB;AACAO,QAAAA,QAAQ,GAAGL,MAAM,CAACK,QAAP,EAAX;AACD;;AACD,UAAIA,QAAJ,EAAc;AACZC,QAAAA,kDAAY,CAACD,QAAD,EAAW,IAAX,CAAZ;AACD;;AACD,aAAOA,QAAP;AACD,KAjBI;;AAkBLE,IAAAA,aAAa,CAACd,IAAD,EAAiC;AAAA,UAAhCA,IAAgC;AAAhCA,QAAAA,IAAgC,GAAJ,EAAI;AAAA;;AAC5C,UAAIC,KAAK,GAAGlB,QAAQ,CAACG,OAArB;AACA,UAAI;AAACgB,QAAAA,IAAD;AAAOC,QAAAA,QAAP;AAAiBC,QAAAA;AAAjB,UAAyBJ,IAA7B;AACA,UAAIf,IAAI,GAAGiB,IAAI,IAAIzD,QAAQ,CAACC,aAA5B;AACA,UAAI2D,QAAQ,GAAGJ,KAAK,CAACA,KAAK,CAACc,MAAN,GAAe,CAAhB,CAAL,CAAwBC,kBAAvC;AACA,UAAIT,MAAM,GAAGC,sBAAsB,CAACC,kDAAY,CAACR,KAAD,CAAb,EAAsB;AAACE,QAAAA;AAAD,OAAtB,EAAkCF,KAAlC,CAAnC;AACAM,MAAAA,MAAM,CAACG,WAAP,GAAqBC,sDAAgB,CAAC1B,IAAD,EAAOgB,KAAP,CAAhB,GAAgChB,IAAhC,GAAuCoB,QAA5D;AACA,UAAIY,YAAY,GAAGV,MAAM,CAACU,YAAP,EAAnB;;AACA,UAAI,CAACA,YAAD,IAAiBb,IAArB,EAA2B;AACzBG,QAAAA,MAAM,CAACG,WAAP,GAAqBL,QAArB;AACAY,QAAAA,YAAY,GAAGV,MAAM,CAACU,YAAP,EAAf;AACD;;AACD,UAAIA,YAAJ,EAAkB;AAChBJ,QAAAA,kDAAY,CAACI,YAAD,EAAe,IAAf,CAAZ;AACD;;AACD,aAAOA,YAAP;AACD;;AAlCI,GAAP;AAoCD;;AAED,MAAMC,uDAAiB,GAAG,CACxB,0CADwB,EAExB,wBAFwB,EAGxB,0BAHwB,EAIxB,wBAJwB,EAKxB,SALwB,EAMxB,YANwB,EAOxB,SAPwB,EAQxB,QARwB,EASxB,QATwB,EAUxB,OAVwB,EAWxB,iBAXwB,EAYxB,iBAZwB,EAaxB,mBAbwB,CAA1B;AAgBA,MAAMC,gEAA0B,GAAGD,uDAAiB,CAACE,IAAlB,CAAuB,iBAAvB,IAA4C,2BAA/E;AAEAF,uDAAiB,CAAC7B,IAAlB,CAAuB,iDAAvB;AACA,MAAMgC,+DAAyB,GAAGH,uDAAiB,CAACE,IAAlB,CAAuB,sCAAvB,CAAlC;;AAEA,SAASX,kDAAT,CAAsBR,KAAtB,EAA4C;AAC1C,SAAOA,KAAK,CAAC,CAAD,CAAL,CAASlC,aAAhB;AACD;;AAED,SAASyB,yDAAT,CAA6BT,QAA7B,EAAiEN,OAAjE,EAAmF;AACjF,MAAI6C,WAAW,GAAGzC,MAAM,EAAxB;AAEA,MAAI0C,GAAG,GAAG1C,MAAM,CAAC,IAAD,CAAhB;AACA2C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIvB,KAAK,GAAGlB,QAAQ,CAACG,OAArB;;AACA,QAAI,CAACT,OAAL,EAAc;AACZ;AACD,KAJa,CAMd;;;AACA,QAAIgD,SAAS,GAAIC,CAAD,IAAO;AACrB,UAAIA,CAAC,CAACC,GAAF,KAAU,KAAV,IAAmBD,CAAC,CAACE,MAArB,IAA+BF,CAAC,CAACG,OAAjC,IAA4CH,CAAC,CAACI,OAAlD,EAA2D;AACzD;AACD;;AAED,UAAIC,cAAc,GAAGtF,QAAQ,CAACC,aAA9B;;AACA,UAAI,CAACiE,sDAAgB,CAACoB,cAAD,EAAiB9B,KAAjB,CAArB,EAA8C;AAC5C;AACD;;AAED,UAAIM,MAAM,GAAGC,sBAAsB,CAACC,kDAAY,CAACR,KAAD,CAAb,EAAsB;AAACE,QAAAA,QAAQ,EAAE;AAAX,OAAtB,EAAwCF,KAAxC,CAAnC;AACAM,MAAAA,MAAM,CAACG,WAAP,GAAqBqB,cAArB;AACA,UAAIC,WAAW,GAAIN,CAAC,CAACO,QAAF,GAAa1B,MAAM,CAACU,YAAP,EAAb,GAAqCV,MAAM,CAACK,QAAP,EAAxD;;AACA,UAAI,CAACoB,WAAL,EAAkB;AAChBzB,QAAAA,MAAM,CAACG,WAAP,GAAqBgB,CAAC,CAACO,QAAF,GAAahC,KAAK,CAACA,KAAK,CAACc,MAAN,GAAe,CAAhB,CAAL,CAAwBC,kBAArC,GAA0Df,KAAK,CAAC,CAAD,CAAL,CAASK,sBAAxF;AACA0B,QAAAA,WAAW,GAAIN,CAAC,CAACO,QAAF,GAAa1B,MAAM,CAACU,YAAP,EAAb,GAAqCV,MAAM,CAACK,QAAP,EAApD;AACD;;AAEDc,MAAAA,CAAC,CAACQ,cAAF;;AACA,UAAIF,WAAJ,EAAiB;AACfnB,QAAAA,kDAAY,CAACmB,WAAD,EAAc,IAAd,CAAZ;AACD;AACF,KAtBD;;AAwBA,QAAIG,OAAO,GAAIT,CAAD,IAAO;AACnB;AACA;AACA,UAAIU,YAAY,GAAGC,yDAAmB,CAACX,CAAC,CAACY,MAAH,EAAWlE,4CAAX,CAAtC;;AACA,UAAI,CAACgE,YAAL,EAAmB;AACjB,YAAId,WAAW,CAACpC,OAAhB,EAAyB;AACvBoC,UAAAA,WAAW,CAACpC,OAAZ,CAAoBqD,KAApB;AACD,SAFD,MAEO,IAAIpE,iDAAJ,EAAiB;AACtBqE,UAAAA,uDAAiB,CAACrE,iDAAW,CAACe,OAAb,CAAjB;AACD;AACF,OAND,MAMO;AACLf,QAAAA,iDAAW,GAAGY,QAAd;AACAuC,QAAAA,WAAW,CAACpC,OAAZ,GAAsBwC,CAAC,CAACY,MAAxB;AACD;AACF,KAdD;;AAgBA,QAAIG,MAAM,GAAIf,CAAD,IAAO;AAClB;AACAH,MAAAA,GAAG,CAACrC,OAAJ,GAAcwD,qBAAqB,CAAC,MAAM;AACxC;AACA,YAAIN,YAAY,GAAGC,yDAAmB,CAAC5F,QAAQ,CAACC,aAAV,EAAyB0B,4CAAzB,CAAtC;;AAEA,YAAI,CAACgE,YAAL,EAAmB;AACjBjE,UAAAA,iDAAW,GAAGY,QAAd;AACAuC,UAAAA,WAAW,CAACpC,OAAZ,GAAsBwC,CAAC,CAACY,MAAxB;AACAhB,UAAAA,WAAW,CAACpC,OAAZ,CAAoBqD,KAApB;AACD;AACF,OATkC,CAAnC;AAUD,KAZD;;AAcA9F,IAAAA,QAAQ,CAACkG,gBAAT,CAA0B,SAA1B,EAAqClB,SAArC,EAAgD,KAAhD;AACAhF,IAAAA,QAAQ,CAACkG,gBAAT,CAA0B,SAA1B,EAAqCR,OAArC,EAA8C,KAA9C;AACAlC,IAAAA,KAAK,CAAC2C,OAAN,CAActG,OAAO,IAAIA,OAAO,CAACqG,gBAAR,CAAyB,SAAzB,EAAoCR,OAApC,EAA6C,KAA7C,CAAzB;AACAlC,IAAAA,KAAK,CAAC2C,OAAN,CAActG,OAAO,IAAIA,OAAO,CAACqG,gBAAR,CAAyB,UAAzB,EAAqCF,MAArC,EAA6C,KAA7C,CAAzB;AACA,WAAO,MAAM;AACXhG,MAAAA,QAAQ,CAACoG,mBAAT,CAA6B,SAA7B,EAAwCpB,SAAxC,EAAmD,KAAnD;AACAhF,MAAAA,QAAQ,CAACoG,mBAAT,CAA6B,SAA7B,EAAwCV,OAAxC,EAAiD,KAAjD;AACAlC,MAAAA,KAAK,CAAC2C,OAAN,CAActG,OAAO,IAAIA,OAAO,CAACuG,mBAAR,CAA4B,SAA5B,EAAuCV,OAAvC,EAAgD,KAAhD,CAAzB;AACAlC,MAAAA,KAAK,CAAC2C,OAAN,CAActG,OAAO,IAAIA,OAAO,CAACuG,mBAAR,CAA4B,UAA5B,EAAwCJ,MAAxC,EAAgD,KAAhD,CAAzB;AACD,KALD;AAMD,GAvEQ,EAuEN,CAAC1D,QAAD,EAAWN,OAAX,CAvEM,CAAT,CAJiF,CA6EjF;;AACA+C,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAMsB,oBAAoB,CAACvB,GAAG,CAACrC,OAAL,CAAjC;AACD,GAFQ,EAEN,CAACqC,GAAD,CAFM,CAAT;AAGD;;AAED,SAASc,yDAAT,CAA6B/F,OAA7B,EAA+C8B,MAA/C,EAAsF;AACpF,OAAK,IAAI6B,KAAT,IAAkB7B,MAAM,CAAC2E,MAAP,EAAlB,EAAmC;AACjC,QAAIpC,sDAAgB,CAACrE,OAAD,EAAU2D,KAAK,CAACf,OAAhB,CAApB,EAA8C;AAC5C,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,SAASyB,sDAAT,CAA0BrE,OAA1B,EAA4C2D,KAA5C,EAAkE;AAChE,SAAOA,KAAK,CAAC+C,IAAN,CAAW/D,IAAI,IAAIA,IAAI,CAACrC,QAAL,CAAcN,OAAd,CAAnB,CAAP;AACD;;AAED,SAASuE,kDAAT,CAAsBvE,OAAtB,EAAmD2G,MAAnD,EAAmE;AAAA,MAAhBA,MAAgB;AAAhBA,IAAAA,MAAgB,GAAP,KAAO;AAAA;;AACjE,MAAI3G,OAAO,IAAI,IAAX,IAAmB,CAAC2G,MAAxB,EAAgC;AAC9B,QAAI;AACF,kBAAY3G,OAAZ;AACD,KAFD,CAEE,OAAO4G,GAAP,EAAY,CACZ;AACD;AACF,GAND,MAMO,IAAI5G,OAAO,IAAI,IAAf,EAAqB;AAC1B,QAAI;AACFA,MAAAA,OAAO,CAACiG,KAAR;AACD,KAFD,CAEE,OAAOW,GAAP,EAAY,CACZ;AACD;AACF;AACF;;AAED,SAASV,uDAAT,CAA2BvC,KAA3B,EAAiD;AAC/C,MAAII,QAAQ,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASK,sBAAxB;AACA,MAAIC,MAAM,GAAGC,sBAAsB,CAACC,kDAAY,CAACR,KAAD,CAAb,EAAsB;AAACE,IAAAA,QAAQ,EAAE;AAAX,GAAtB,EAAwCF,KAAxC,CAAnC;AACAM,EAAAA,MAAM,CAACG,WAAP,GAAqBL,QAArB;AACAQ,EAAAA,kDAAY,CAACN,MAAM,CAACK,QAAP,EAAD,CAAZ;AACD;;AAED,SAASlB,kDAAT,CAAsBX,QAAtB,EAA0DJ,SAA1D,EAA8E;AAC5E6C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI7C,SAAJ,EAAe;AACbR,MAAAA,iDAAW,GAAGY,QAAd;;AACA,UAAI,CAAC4B,sDAAgB,CAAClE,QAAQ,CAACC,aAAV,EAAyByB,iDAAW,CAACe,OAArC,CAArB,EAAoE;AAClEsD,QAAAA,uDAAiB,CAACzD,QAAQ,CAACG,OAAV,CAAjB;AACD;AACF;AACF,GAPQ,EAON,CAACH,QAAD,EAAWJ,SAAX,CAPM,CAAT;AAQD;;AAED,SAASc,qDAAT,CAAyBV,QAAzB,EAA6DL,YAA7D,EAAoFD,OAApF,EAAsG;AACpG;AACAO,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIiB,KAAK,GAAGlB,QAAQ,CAACG,OAArB;AACA,QAAIiE,aAAa,GAAG1G,QAAQ,CAACC,aAA7B,CAFoB,CAIpB;AACA;AACA;AACA;;AACA,QAAI+E,SAAS,GAAIC,CAAD,IAAsB;AACpC,UAAIA,CAAC,CAACC,GAAF,KAAU,KAAV,IAAmBD,CAAC,CAACE,MAArB,IAA+BF,CAAC,CAACG,OAAjC,IAA4CH,CAAC,CAACI,OAAlD,EAA2D;AACzD;AACD;;AAED,UAAIC,cAAc,GAAGtF,QAAQ,CAACC,aAA9B;;AACA,UAAI,CAACiE,sDAAgB,CAACoB,cAAD,EAAiB9B,KAAjB,CAArB,EAA8C;AAC5C;AACD,OARmC,CAUpC;;;AACA,UAAIM,MAAM,GAAGC,sBAAsB,CAAC/D,QAAQ,CAAC2G,IAAV,EAAgB;AAACjD,QAAAA,QAAQ,EAAE;AAAX,OAAhB,CAAnC,CAXoC,CAapC;;AACAI,MAAAA,MAAM,CAACG,WAAP,GAAqBqB,cAArB;AACA,UAAIC,WAAW,GAAIN,CAAC,CAACO,QAAF,GAAa1B,MAAM,CAACU,YAAP,EAAb,GAAqCV,MAAM,CAACK,QAAP,EAAxD;;AAEA,UAAI,CAACnE,QAAQ,CAAC2G,IAAT,CAAcxG,QAAd,CAAuBuG,aAAvB,CAAD,IAA0CA,aAAa,KAAK1G,QAAQ,CAAC2G,IAAzE,EAA+E;AAC7ED,QAAAA,aAAa,GAAG,IAAhB;AACD,OAnBmC,CAqBpC;AACA;;;AACA,UAAI,CAAC,CAACnB,WAAD,IAAgB,CAACrB,sDAAgB,CAACqB,WAAD,EAAc/B,KAAd,CAAlC,KAA2DkD,aAA/D,EAA8E;AAC5E5C,QAAAA,MAAM,CAACG,WAAP,GAAqByC,aAArB,CAD4E,CAG5E;;AACA,WAAG;AACDnB,UAAAA,WAAW,GAAIN,CAAC,CAACO,QAAF,GAAa1B,MAAM,CAACU,YAAP,EAAb,GAAqCV,MAAM,CAACK,QAAP,EAApD;AACD,SAFD,QAESD,sDAAgB,CAACqB,WAAD,EAAc/B,KAAd,CAFzB;;AAIAyB,QAAAA,CAAC,CAACQ,cAAF;AACAR,QAAAA,CAAC,CAAC2B,eAAF;;AACA,YAAIrB,WAAJ,EAAiB;AACfnB,UAAAA,kDAAY,CAACmB,WAAD,EAAc,IAAd,CAAZ;AACD,SAFD,MAEO;AACL;AACAD,UAAAA,cAAc,CAACuB,IAAf;AACD;AACF;AACF,KAxCD;;AA0CA,QAAI,CAAC7E,OAAL,EAAc;AACZhC,MAAAA,QAAQ,CAACkG,gBAAT,CAA0B,SAA1B,EAAqClB,SAArC,EAAgD,IAAhD;AACD;;AAED,WAAO,MAAM;AACX,UAAI,CAAChD,OAAL,EAAc;AACZhC,QAAAA,QAAQ,CAACoG,mBAAT,CAA6B,SAA7B,EAAwCpB,SAAxC,EAAmD,IAAnD;AACD;;AAED,UAAI/C,YAAY,IAAIyE,aAAhB,IAAiCxC,sDAAgB,CAAClE,QAAQ,CAACC,aAAV,EAAyBuD,KAAzB,CAArD,EAAsF;AACpFyC,QAAAA,qBAAqB,CAAC,MAAM;AAC1B,cAAIjG,QAAQ,CAAC2G,IAAT,CAAcxG,QAAd,CAAuBuG,aAAvB,CAAJ,EAA2C;AACzCtC,YAAAA,kDAAY,CAACsC,aAAD,CAAZ;AACD;AACF,SAJoB,CAArB;AAKD;AACF,KAZD;AAaD,GAnEc,EAmEZ,CAACpE,QAAD,EAAWL,YAAX,EAAyBD,OAAzB,CAnEY,CAAf;AAoED;AAED;;;;;;AAIO,SAAS+B,sBAAT,CAAgC+C,IAAhC,EAAmDvD,IAAnD,EAA+EC,KAA/E,EAAsG;AAC3G,MAAIuD,QAAQ,GAAG,CAAAxD,IAAI,QAAJ,YAAAA,IAAI,CAAEG,QAAN,IAAiBkB,+DAAjB,GAA6CF,gEAA5D;AACA,MAAIZ,MAAM,GAAG9D,QAAQ,CAACgH,gBAAT,CACXF,IADW,EAEXG,UAAU,CAACC,YAFA,EAGX;AACEC,IAAAA,UAAU,CAAC3E,IAAD,EAAO;AAAA;;AACf;AACA,UAAIe,IAAJ,kCAAIA,IAAI,CAAEE,IAAV,qBAAI,WAAYtD,QAAZ,CAAqBqC,IAArB,CAAJ,EAAgC;AAC9B,eAAOyE,UAAU,CAACG,aAAlB;AACD;;AAED,UAAK5E,IAAD,CAAsB6E,OAAtB,CAA8BN,QAA9B,KACC,qDAAiBvE,IAAjB,CADD,KAEE,CAACgB,KAAD,IAAUU,sDAAgB,CAAC1B,IAAD,EAAsBgB,KAAtB,CAF5B,CAAJ,EAE+D;AAC7D,eAAOyD,UAAU,CAACK,aAAlB;AACD;;AAED,aAAOL,UAAU,CAACM,WAAlB;AACD;;AAdH,GAHW,CAAb;;AAqBA,MAAIhE,IAAJ,oBAAIA,IAAI,CAAEE,IAAV,EAAgB;AACdK,IAAAA,MAAM,CAACG,WAAP,GAAqBV,IAAI,CAACE,IAA1B;AACD;;AAED,SAAOK,MAAP;AACD;;;;ACnYD;;;;;AAKO,SAAS0D,YAAT,CAAsB1F,KAAtB,EAAiE;AAAA,MAA3CA,KAA2C;AAA3CA,IAAAA,KAA2C,GAAnB,EAAmB;AAAA;;AACtE,MAAI;AAAC2F,IAAAA;AAAD,MAAW3F,KAAf;AACA,MAAI,CAAC4F,SAAD,EAAYC,UAAZ,IAA0BC,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACC,aAAD,EAAgBC,cAAhB,IAAkCF,QAAQ,CAAC,KAAD,CAA9C;AACA,MAAI;AAACG,IAAAA;AAAD,MAAmBC,eAAe,CAAClG,KAAD,CAAtC;AACA,MAAI;AAACmG,IAAAA;AAAD,MAAeC,QAAQ,CAAC;AAC1BC,IAAAA,UAAU,EAAEV,MADc;AAE1BW,IAAAA,aAAa,EAAET;AAFW,GAAD,CAA3B;AAIA,MAAI;AAACU,IAAAA;AAAD,MAAqBC,cAAc,CAAC;AACtCH,IAAAA,UAAU,EAAE,CAACV,MADyB;AAEtCc,IAAAA,mBAAmB,EAAET;AAFiB,GAAD,CAAvC;AAKA,SAAO;AACLJ,IAAAA,SAAS,EAAED,MAAM,GAAGI,aAAH,GAAmBH,SAD/B;AAELK,IAAAA,cAAc,EAAE,CAACN,MAAM,GAAGI,aAAH,GAAmBH,SAA1B,KAAwCK,cAFnD;AAGLE,IAAAA,UAAU,EAAER,MAAM,GAAGY,gBAAH,GAAsBJ;AAHnC,GAAP;AAKD;;;;ACjBD;;;;;AAKO,SAASO,SAAT,CAAmB1G,KAAnB,EAA0C;AAC/C,MAAI;AAACC,IAAAA,QAAD;AAAW0G,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAAyC5G,KAA7C;AACA,MAAI;AAAC4F,IAAAA,SAAD;AAAYK,IAAAA,cAAZ;AAA4BE,IAAAA;AAA5B,MAA0C,aAAanG,KAAb,CAA9C;;AACA,MAAI6G,KAAK,GAAGnH,MAAK,CAACoH,QAAN,CAAeC,IAAf,CAAoB9G,QAApB,CAAZ;;AAEA,sBAAOP,MAAK,CAACsH,YAAN,CAAmBH,KAAnB,EAA0BI,UAAU,CAACJ,KAAK,CAAC7G,KAAP,kCACtCmG,UADsC;AAEzCe,IAAAA,SAAS,EAAEC,KAAI,CAAC;AACd,OAACR,UAAU,IAAI,EAAf,GAAoBf,SADN;AAEd,OAACgB,cAAc,IAAI,EAAnB,GAAwBX;AAFV,KAAD;AAF0B,KAApC,CAAP;AAOD;;;;ACvBD,IAAImB,qDAAgB,gBAAG1H,MAAK,CAACC,aAAN,CAA2C,IAA3C,CAAvB;;AAEA,SAAS0H,wDAAT,CAA6BC,GAA7B,EAAiF;AAC/E,MAAIC,OAAO,GAAGhG,UAAU,CAAC6F,qDAAD,CAAV,IAAgC,EAA9C;AACAI,EAAAA,UAAU,CAACD,OAAD,EAAUD,GAAV,CAAV;AAEA,SAAOC,OAAP;AACD;AAED;;;;;AAGA,SAASE,sDAAT,CAA2BzH,KAA3B,EAA0DsH,GAA1D,EAAuF;AACrF,MAAI;AAACrH,IAAAA;AAAD,MAA4BD,KAAhC;AAAA,MAAkB0H,UAAlB,oDAAgC1H,KAAhC;;AACA,MAAIuH,OAAO,mCACNG,UADM;AAETJ,IAAAA;AAFS,IAAX;;AAKA,sBACE,qBAAC,qDAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEC;AAAlC,KACGtH,QADH,CADF;AAKD;;AAED,IAAI0H,iBAAkB,gBAAGjI,MAAK,CAACkI,UAAN,CAAiBH,sDAAjB,CAAzB;;;;AAGA;;;AAGO,SAASI,YAAT,CAAsB7H,KAAtB,EAA+C8H,MAA/C,EAA+E;AACpF,MAAI;AAAC3B,IAAAA;AAAD,MAAeC,QAAQ,CAACpG,KAAD,CAA3B;AACA,MAAI;AAAC+H,IAAAA;AAAD,MAAkBC,WAAW,CAAChI,KAAD,CAAjC;AACA,MAAIiI,YAAY,GAAGhB,UAAU,CAACd,UAAD,EAAa4B,aAAb,CAA7B;AACA,MAAIG,QAAQ,GAAGb,wDAAmB,CAACS,MAAD,CAAlC;AACA,MAAIK,gBAAgB,GAAGnI,KAAK,CAACqG,UAAN,GAAmB,EAAnB,GAAwB6B,QAA/C;AAEAjF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIjD,KAAK,CAACI,SAAN,IAAmB0H,MAAM,CAACnH,OAA9B,EAAuC;AACrCmH,MAAAA,MAAM,CAACnH,OAAP,CAAeqD,KAAf;AACD;AACF,GAJQ,EAIN,CAAChE,KAAK,CAACI,SAAP,EAAkB0H,MAAlB,CAJM,CAAT;AAMA,SAAO;AACLM,IAAAA,cAAc,EAAEnB,UAAU,iCAEnBgB,YAFmB;AAGtBI,MAAAA,QAAQ,EAAErI,KAAK,CAACsI,mBAAN,IAA6B,CAACtI,KAAK,CAACqG,UAApC,GAAiD,CAAC,CAAlD,GAAsDkC;AAH1C,QAKxBJ,gBALwB;AADrB,GAAP;AASD","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/focus/src/focusSafely.ts","./packages/@react-aria/focus/src/isElementVisible.ts","./packages/@react-aria/focus/src/FocusScope.tsx","./packages/@react-aria/focus/src/useFocusRing.ts","./packages/@react-aria/focus/src/FocusRing.tsx","./packages/@react-aria/focus/src/useFocusable.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: HTMLElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction isStyleVisible(element: Element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and \n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */  \nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely} from './focusSafely';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n// import {FocusScope, useFocusScope} from 'react-events/focus-scope';\n// export {FocusScope};\n\ninterface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\ninterface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: HTMLElement,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean\n}\n\ninterface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): HTMLElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): HTMLElement\n}\n\nconst FocusContext = React.createContext<FocusManager>(null);\n\nlet activeScope: RefObject<HTMLElement[]> = null;\nlet scopes: Set<RefObject<HTMLElement[]>> = new Set();\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n// For now, it relies on the DOM tree order rather than the React tree order, and is probably\n// less optimized for performance.\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<HTMLElement[]>([]);\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n    scopes.add(scopeRef);\n    return () => {\n      scopes.delete(scopeRef);\n    };\n  }, [children]);\n\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  let focusManager = createFocusManager(scopeRef);\n\n  return (\n    <FocusContext.Provider value={focusManager}>\n      <span hidden ref={startRef} />\n      {children}\n      <span hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext);\n}\n\nfunction createFocusManager(scopeRef: React.RefObject<HTMLElement[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap} = opts; \n      let node = from || document.activeElement;\n      let sentinel = scope[0].previousElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as HTMLElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as HTMLElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap} = opts; \n      let node = from || document.activeElement;\n      let sentinel = scope[scope.length - 1].nextElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as HTMLElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as HTMLElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: HTMLElement[]) {\n  return scope[0].parentElement;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<HTMLElement[]>, contain: boolean) {\n  let focusedNode = useRef<HTMLElement>();\n\n  let raf = useRef(null);\n  useEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode())  as HTMLElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n      // restore focus to the previously focused node or the first tabbable element in the active scope.\n      let isInAnyScope = isElementInAnyScope(e.target, scopes);\n      if (!isInAnyScope) {\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        let isInAnyScope = isElementInAnyScope(document.activeElement, scopes);\n\n        if (!isInAnyScope) {\n          activeScope = scopeRef;\n          focusedNode.current = e.target;\n          focusedNode.current.focus();\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => cancelAnimationFrame(raf.current);\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element, scopes: Set<RefObject<HTMLElement[]>>) {\n  for (let scope of scopes.values()) {\n    if (isElementInScope(element, scope.current)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isElementInScope(element: Element, scope: HTMLElement[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction focusElement(element: HTMLElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: HTMLElement[]) {\n  let sentinel = scope[0].previousElementSibling;\n  let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n  walker.currentNode = sentinel;\n  focusElement(walker.nextNode() as HTMLElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<HTMLElement[]>, autoFocus: boolean) {\n  useEffect(() => {\n    if (autoFocus) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n  }, [scopeRef, autoFocus]);\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<HTMLElement[]>, restoreFocus: boolean, contain: boolean) {\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    let nodeToRestore = document.activeElement as HTMLElement;\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scope)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n        } while (isElementInScope(nextElement, scope));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n          // If there is no next element, blur the focused element to move focus to the body.\n          focusedElement.blur();\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n\n      if (restoreFocus && nodeToRestore && isElementInScope(document.activeElement, scope)) {\n        requestAnimationFrame(() => {\n          if (document.body.contains(nodeToRestore)) {\n            focusElement(nodeToRestore);\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: HTMLElement, opts?: FocusManagerOptions, scope?: HTMLElement[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as HTMLElement).matches(selector)\n          && isElementVisible(node as HTMLElement)\n          && (!scope || isElementInScope(node as HTMLElement, scope))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n","import {HTMLAttributes, useState} from 'react';\nimport {useFocus, useFocusVisible, useFocusWithin} from '@react-aria/interactions';\n\ninterface FocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: FocusRingProps = {}): FocusRingAria {\n  let {within} = props;\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusWithin, setFocusWithin] = useState(false);\n  let {isFocusVisible} = useFocusVisible(props);\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange: setFocused\n  });\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: setFocusWithin\n  });\n\n  return {\n    isFocused: within ? isFocusWithin : isFocused,\n    isFocusVisible: (within ? isFocusWithin : isFocused) && isFocusVisible,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\ninterface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableDOMProps, FocusableProps} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport React, {HTMLAttributes, MutableRefObject, ReactNode, RefObject, useContext, useEffect} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\ninterface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusableProviderProps extends HTMLAttributes<HTMLElement> {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<HTMLElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<HTMLElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  return context;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<HTMLElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<HTMLElement>) {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n\n  useEffect(() => {\n    if (props.autoFocus && domRef.current) {\n      domRef.current.focus();\n    }\n  }, [props.autoFocus, domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","focusSafely","element","getInteractionModality","lastFocusedElement","document","activeElement","runAfterTransition","contains","focusWithoutScrolling","isStyleVisible","HTMLElement","SVGElement","display","visibility","style","isVisible","getComputedStyle","ownerDocument","defaultView","computedDisplay","computedVisibility","isAttributeVisible","childElement","hasAttribute","nodeName","isElementVisible","parentElement","FocusContext","React","createContext","activeScope","scopes","Set","FocusScope","props","children","contain","restoreFocus","autoFocus","startRef","useRef","endRef","scopeRef","useLayoutEffect","node","current","nextSibling","nodes","push","add","delete","useFocusContainment","useRestoreFocus","useAutoFocus","focusManager","createFocusManager","useFocusManager","useContext","focusNext","opts","scope","from","tabbable","wrap","sentinel","previousElementSibling","walker","getFocusableTreeWalker","getScopeRoot","currentNode","isElementInScope","nextNode","focusElement","focusPrevious","length","nextElementSibling","previousNode","focusableElements","FOCUSABLE_ELEMENT_SELECTOR","join","TABBABLE_ELEMENT_SELECTOR","focusedNode","raf","useEffect","onKeyDown","e","key","altKey","ctrlKey","metaKey","focusedElement","nextElement","shiftKey","preventDefault","onFocus","isInAnyScope","isElementInAnyScope","target","focus","focusFirstInScope","onBlur","requestAnimationFrame","addEventListener","forEach","removeEventListener","cancelAnimationFrame","values","some","scroll","err","nodeToRestore","body","stopPropagation","blur","root","selector","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","FILTER_REJECT","matches","FILTER_ACCEPT","FILTER_SKIP","useFocusRing","within","isFocused","setFocused","useState","isFocusWithin","setFocusWithin","isFocusVisible","useFocusVisible","focusProps","useFocus","isDisabled","onFocusChange","focusWithinProps","useFocusWithin","onFocusWithinChange","FocusRing","focusClass","focusRingClass","child","Children","only","cloneElement","mergeProps","className","clsx","FocusableContext","useFocusableContext","ref","context","useSyncRef","FocusableProvider","otherProps","_FocusableProvider","forwardRef","useFocusable","domRef","keyboardProps","useKeyboard","interactions","domProps","interactionProps","focusableProps","tabIndex","excludeFromTabOrder","undefined"],"version":3,"file":"main.js.map"}