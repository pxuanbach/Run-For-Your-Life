{"version":3,"sources":["input.ts"],"names":["baseStyle","props","primary","theme","colors","focusRing","Platform","OS","boxShadow","variant","zIndex","px","py","borderRadius","color","placeholderTextColor","background","borderColor","_disabled","opacity","bg","_hover","_invalid","_focus","style","_android","p","_ios","_web","outlineWidth","lineHeight","roundedStyle","borderWidth","outlineStyle","filledStyle","unstyledStyle","underlinedStyle","borderBottomWidth","variants","outline","underlined","rounded","filled","unstyled","sizes","fontSize","defaultProps","size","Input"],"mappings":"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","sourcesContent":["import { mode } from '../tools';\nimport { Platform } from 'react-native';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // Todo: Update to support similar focusRing on iOS , Android and Web\n  const focusRing =\n    Platform.OS === 'web'\n      ? {\n          boxShadow:\n            props.variant !== 'underlined'\n              ? `${primary[400]} 0px 0px 0px 1px`\n              : `${primary[400]} 0px 1px 0px 0px`,\n          zIndex: 1,\n        }\n      : {\n          // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n        };\n\n  return {\n    px: 4,\n    py: 2,\n    borderRadius: 'lg',\n    color: mode('black', 'white')(props),\n    placeholderTextColor: mode('muted.400', 'muted.500')(props),\n    background: 'transparent',\n    borderColor: mode('muted.200', 'muted.600')(props),\n    _disabled: {\n      opacity: 0.8,\n      bg: mode('muted.100', 'muted.700')(props),\n    },\n    _hover: {\n      borderColor: mode('muted.300', 'muted.500')(props),\n    },\n    _invalid: {\n      borderColor: mode('error.600', 'error.200')(props),\n    },\n    _focus: {\n      style: { ...focusRing },\n      borderColor: 'primary.400',\n    },\n    _android: {\n      p: 3,\n      _focus: {\n        borderColor: 'primary.400',\n      },\n    },\n    _ios: {\n      px: 4,\n      py: 3,\n      _focus: {\n        borderColor: 'primary.400',\n      },\n    },\n    _web: {\n      outlineWidth: 0,\n      lineHeight: 6, // Todo: Move to _web inside size so that sm and xs don't have this much height\n    },\n  };\n};\n\nfunction roundedStyle() {\n  return {\n    borderRadius: 'pill',\n    borderWidth: 1,\n  };\n}\nfunction outlineStyle() {\n  return {\n    borderWidth: 1,\n  };\n}\nfunction filledStyle(props: Record<string, any>) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: 1,\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.500')(props),\n    },\n  };\n}\nfunction unstyledStyle() {\n  return {\n    borderWidth: 0,\n  };\n}\nfunction underlinedStyle() {\n  return {\n    borderRadius: 0,\n    borderBottomWidth: 1,\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle,\n};\n\nconst sizes = {\n  '2xl': { fontSize: '2xl' },\n  'xl': { fontSize: 'xl' },\n  'lg': { fontSize: 'lg' },\n  'md': { fontSize: 'md' },\n  'sm': { fontSize: 'sm' },\n  'xs': { fontSize: 'xs' },\n};\n\nconst defaultProps = {\n  size: 'md',\n  variant: 'outline',\n};\n\n// Input\nexport const Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes,\n};\n\nexport default {};\n"]}