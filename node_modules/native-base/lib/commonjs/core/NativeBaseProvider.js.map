{"version":3,"sources":["NativeBaseProvider.tsx"],"names":["NativeBaseProvider","props","colorModeManager","config","children","theme","propsTheme","defaultTheme","initialWindowMetrics","defaultInitialWindowMetrics"],"mappings":"8KAAA,oDACA,gDACA,0EAIA,+CACA,iCAEA,uFACA,qDACA,qDACA,sD,uHAcA,GAAMA,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAoC,sBAE3DC,CAAAA,gBAF2D,CAOzDD,KAPyD,CAE3DC,gBAF2D,eAOzDD,KAPyD,CAG3DE,MAH2D,CAG3DA,MAH2D,wBAGlD,EAHkD,eAI3DC,QAJ2D,CAOzDH,KAPyD,CAI3DG,QAJ2D,cAOzDH,KAPyD,CAK3DI,KAL2D,CAKpDC,UALoD,uBAKvCC,YALuC,cAM3DC,oBAN2D,CAOzDP,KAPyD,CAM3DO,oBAN2D,CAQ7D,GAAMH,CAAAA,KAAK,gBAAGF,MAAM,CAACE,KAAV,sBAAmBC,UAA9B,CAEA,MACE,8BAAC,qBAAD,EAAe,KAAK,CAAED,KAAtB,6EACE,6BAAC,2CAAD,EAA0B,MAAM,CAAEF,MAAlC,6EACE,6BAAC,4CAAD,EACE,cAAc,CAAEK,oBAAF,OAAEA,oBAAF,CAA0BC,gDAD1C,6EAGE,6BAAC,uBAAD,EACE,gBAAgB,CAAEP,gBADpB,CAEE,OAAO,CAAEG,KAAK,CAACF,MAFjB,8EAIE,6BAAC,yBAAD,+EACE,6BAAC,oBAAD,+EACE,6BAAC,kBAAD,+EAAcC,QAAd,CADF,CADF,CAJF,CAHF,CADF,CADF,CADF,CAoBD,CA9BD,C","sourcesContent":["import React from 'react';\nimport { ThemeProvider } from 'styled-components/native';\nimport {\n  SafeAreaProvider,\n  initialWindowMetrics as defaultInitialWindowMetrics,\n} from 'react-native-safe-area-context';\nimport { SSRProvider } from '@react-native-aria/utils';\nimport { theme as defaultTheme, ITheme } from './../theme';\nimport type { IColorModeProviderProps } from './color-mode';\nimport HybridProvider from './hybrid-overlay/HybridProvider';\nimport { OverlayProvider } from '@react-native-aria/overlays';\nimport { ToastProvider } from '../components/composites/Toast';\nimport {\n  INativebaseConfig,\n  NativeBaseConfigProvider,\n} from './NativeBaseContext';\n\nexport interface NativeBaseProviderProps {\n  theme?: ITheme;\n  colorModeManager?: IColorModeProviderProps['colorModeManager'];\n  children?: React.ReactNode;\n  initialWindowMetrics?: any;\n  config?: INativebaseConfig;\n  // Refer https://github.com/th3rdwave/react-native-safe-area-context#testing\n}\n\nconst NativeBaseProvider = (props: NativeBaseProviderProps) => {\n  const {\n    colorModeManager,\n    config = {},\n    children,\n    theme: propsTheme = defaultTheme,\n    initialWindowMetrics,\n  } = props;\n  const theme = config.theme ?? propsTheme;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NativeBaseConfigProvider config={config}>\n        <SafeAreaProvider\n          initialMetrics={initialWindowMetrics ?? defaultInitialWindowMetrics}\n        >\n          <HybridProvider\n            colorModeManager={colorModeManager}\n            options={theme.config}\n          >\n            <OverlayProvider>\n              <ToastProvider>\n                <SSRProvider>{children}</SSRProvider>\n              </ToastProvider>\n            </OverlayProvider>\n          </HybridProvider>\n        </SafeAreaProvider>\n      </NativeBaseConfigProvider>\n    </ThemeProvider>\n  );\n};\n\nexport { NativeBaseProvider };\n"]}