{"version":3,"sources":["index.tsx"],"names":["Link","ref","style","href","isUnderlined","onPress","isExternal","children","_text","wrapperRef","props","stylingProps","margin","position","layout","layoutProps","remProps","_hover","newProps","_ref","React","useRef","isHovered","linkTextProps","textDecorationLine","linkProps","Platform","OS"],"mappings":"wnBAAA,qDACA,yCAEA,mDACA,qCACA,mCACA,qCACA,uCACA,6DACA,kD,gIAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,OAYXC,GAZW,CAaR,IAXDC,CAAAA,KAWC,OAXDA,KAWC,CAVDC,IAUC,OAVDA,IAUC,0BATDC,YASC,CATDA,YASC,6BATc,KASd,oBARDC,OAQC,OARDA,OAQC,CAPDC,UAOC,OAPDA,UAOC,CANDC,QAMC,OANDA,QAMC,CALDC,KAKC,OALDA,KAKC,CAJDC,UAIC,OAJDA,UAIC,CAHEC,KAGF,0JAC6B,4BAAgBA,KAAhB,2CAC3BC,qBAAaC,MADc,kCAE3BD,qBAAaE,QAFc,kCAG3BF,qBAAaG,MAHc,GAD7B,mEACIC,WADJ,sBACiBC,QADjB,8CAM2B,8BAAmB,MAAnB,CAA2BA,QAA3B,CAN3B,CAMGC,MANH,qBAMGA,MANH,CAMcC,QANd,uEAOH,GAAMC,CAAAA,IAAI,CAAGC,eAAMC,MAAN,CAAa,IAAb,CAAb,CAPG,cAQmB,2BAAS,EAAT,CAAaF,IAAb,CARnB,CAQKG,SARL,WAQKA,SARL,CASH,GAAMC,CAAAA,aAAa,wBACjBC,kBAAkB,CAAEpB,YAAY,EAAIkB,SAAhB,CAA4B,WAA5B,CAA0C,MAD7C,EAEdd,KAFc,CAAnB,CATG,aAamB,sBAAQ,CAAEL,IAAI,CAAJA,IAAF,CAAQE,OAAO,CAAPA,OAAR,CAAiBC,UAAU,CAAVA,UAAjB,CAA6Ba,IAAI,CAAJA,IAA7B,CAAR,CAbnB,CAaKM,SAbL,UAaKA,SAbL,CAcH,MACE,8BAAC,YAAD,0BAASV,WAAT,EAAsB,GAAG,CAAEN,UAA3B,8EAEGiB,sBAASC,EAAT,GAAgB,KAAhB,CACC,6BAAC,YAAD,0BACMF,SADN,CAEMP,QAFN,EAGE,KAAK,CAAEK,aAHT,EAIOD,SAAS,EAAIL,MAJpB,EAKE,GAAG,CAAE,qBAAU,CAAChB,GAAD,CAAMkB,IAAN,CAAV,CALP,CAME,aAAa,CAAC,KANhB,CAOE,KAAK,CAAEjB,KAPT,8EASGK,QATH,CADD,CAaC,6BAAC,oBAAD,0BAAekB,SAAf,CAA8BP,QAA9B,EAAwC,GAAG,CAAEjB,GAA7C,8EACE,6BAAC,YAAD,wBACE,KAAK,CAAEsB,aADT,EAEML,QAFN,EAGE,aAAa,CAAC,KAHhB,CAIE,KAAK,CAAEhB,KAJT,+EAMGK,QANH,CADF,CAfJ,CADF,CA6BD,CAxDD,C,aA0De,gBAAK,sBAAWP,IAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport type { ILinkProps } from './types';\nimport Box from '../Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useLink } from './useLink';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\n\nconst Link = (\n  {\n    style,\n    href,\n    isUnderlined = false,\n    onPress,\n    isExternal,\n    children,\n    _text,\n    wrapperRef,\n    ...props\n  }: ILinkProps,\n  ref: any\n) => {\n  const [layoutProps, remProps] = extractInObject(props, [\n    ...stylingProps.margin,\n    ...stylingProps.position,\n    ...stylingProps.layout,\n  ]);\n  let { _hover, ...newProps } = usePropsResolution('Link', remProps);\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  const linkTextProps = {\n    textDecorationLine: isUnderlined || isHovered ? 'underline' : 'none',\n    ..._text,\n  };\n  const { linkProps } = useLink({ href, onPress, isExternal, _ref });\n  return (\n    <Box {...layoutProps} ref={wrapperRef}>\n      {/* On web we render Link in anchor tag */}\n      {Platform.OS === 'web' ? (\n        <Box\n          {...linkProps}\n          {...newProps}\n          _text={linkTextProps}\n          {...(isHovered && _hover)}\n          ref={mergeRefs([ref, _ref])}\n          flexDirection=\"row\"\n          style={style}\n        >\n          {children}\n        </Box>\n      ) : (\n        <Pressable {...linkProps} {...newProps} ref={ref}>\n          <Box\n            _text={linkTextProps}\n            {...newProps}\n            flexDirection=\"row\"\n            style={style}\n          >\n            {children}\n          </Box>\n        </Pressable>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Link));\nexport type { ILinkProps };\n"]}