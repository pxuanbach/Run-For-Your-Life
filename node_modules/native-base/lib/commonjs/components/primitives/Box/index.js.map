{"version":3,"sources":["index.tsx"],"names":["StyledBox","View","color","space","layout","flexbox","border","position","typography","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customTypography","customLayout","Box","ref","children","props","_text","resolvedProps","safeAreaProps","React","Children","map","child"],"mappings":"wbAAA,qDACA,yCACA,wEACA,2CASA,2DACA,uDACA,uDAWA,uD,+HAEA,GAAMA,CAAAA,SAAS,CAAG,oBAAOC,iBAAP,EAChBC,mBADgB,CAEhBC,mBAFgB,CAGhBC,oBAHgB,CAIhBC,qBAJgB,CAKhBC,oBALgB,CAMhBC,sBANgB,CAOhBC,wBAPgB,CAQhBC,2BARgB,CAShBC,yBATgB,CAUhBC,6BAVgB,CAWhBC,0BAXgB,CAYhBC,yBAZgB,CAahBC,wBAbgB,CAchBC,6BAdgB,CAehBC,yBAfgB,CAAlB,CAkBA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAoCC,GAApC,CAAiD,IAA9CC,CAAAA,QAA8C,MAA9CA,QAA8C,CAAjCC,KAAiC,kFAEvB,sCAAmB,KAAnB,CAA0BA,KAA1B,CAFuB,CAEnDC,KAFmD,qBAEnDA,KAFmD,CAEzCC,aAFyC,sEAG3D,GAAMC,CAAAA,aAAa,CAAG,6BAAYD,aAAZ,CAAtB,CAEA,MACE,8BAAC,SAAD,wBAAW,GAAG,CAAEJ,GAAhB,EAAyBK,aAAzB,+EACGC,eAAMC,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,CAA6B,SAACQ,KAAD,QAC5B,OAAOA,CAAAA,KAAP,GAAiB,QAAjB,CAA4B,6BAAC,aAAD,0BAAUN,KAAV,gFAAkBM,KAAlB,CAA5B,CAA8DA,KADlC,EAA7B,CADH,CADF,CAOD,CAZD,C,aAgBe,gBAAK,sBAAWV,GAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { View } from 'react-native';\nimport styled from 'styled-components/native';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  position,\n  space,\n  typography,\n} from 'styled-system';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Text from './../Text';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n  customTypography,\n} from '../../../utils/customProps';\nimport type { IBoxProps } from './types';\nimport { useSafeArea } from '../../../hooks/useSafeArea';\n\nconst StyledBox = styled(View)<IBoxProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  typography,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customTypography,\n  customLayout\n);\n\nconst Box = ({ children, ...props }: IBoxProps, ref: any) => {\n  // const { _text, ...resolvedProps } = useThemeProps('Box', props);\n  const { _text, ...resolvedProps } = usePropsResolution('Box', props);\n  const safeAreaProps = useSafeArea(resolvedProps);\n\n  return (\n    <StyledBox ref={ref} {...safeAreaProps}>\n      {React.Children.map(children, (child) =>\n        typeof child === 'string' ? <Text {..._text}>{child}</Text> : child\n      )}\n    </StyledBox>\n  );\n};\n\nexport type { IBoxProps };\n\nexport default memo(forwardRef(Box));\n"]}