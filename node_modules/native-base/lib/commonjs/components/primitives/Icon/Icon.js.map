{"version":3,"sources":["Icon.tsx"],"names":["Icon","ref","as","props","size","color","resolvedProps","hexColor","themeSize","parseInt","asWithProps","React","cloneElement"],"mappings":"wbAAA,qDACA,qCAEA,0DACA,mD,+HAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA+BC,GAA/B,CAA6C,IAA1CC,CAAAA,EAA0C,MAA1CA,EAA0C,CAAnCC,KAAmC,4EACd,8BAAmB,MAAnB,CAA2BA,KAA3B,CADc,CAChDC,IADgD,qBAChDA,IADgD,CAC1CC,KAD0C,qBAC1CA,KAD0C,CAChCC,aADgC,6EAExD,GAAMC,CAAAA,QAAQ,CAAG,oBAAS,QAAT,CAAmBF,KAAK,EAAI,EAA5B,CAAjB,CACA,GAAMG,CAAAA,SAAS,CAAGC,QAAQ,CAAC,oBAAS,OAAT,CAAkBL,IAAI,EAAI,EAA1B,CAAD,CAAgC,EAAhC,CAA1B,CACA,GAAI,CAACF,EAAL,CAAS,CACP,MAAO,8BAAC,gBAAD,0BAAaC,KAAb,EAAoB,GAAG,CAAEF,GAAzB,+EAAP,CACD,CAED,GAAMS,CAAAA,WAAW,CAAGC,eAAMC,YAAN,CAAmBV,EAAnB,0BACfA,EAAE,CAACC,KADY,EAElBE,KAAK,CAAEE,QAFW,CAGlBH,IAAI,CAAEI,SAHY,GAApB,CAMA,MAAO,8BAAC,YAAD,0BAASF,aAAT,gFAAyBI,WAAzB,CAAP,CACD,CAfD,C,aAiBe,gBAAK,sBAAWV,IAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport type { IIconProps } from './types';\nimport SVGIcon from './SVGIcon';\nimport Box from '../Box';\n\nconst Icon = ({ as, ...props }: IIconProps, ref?: any) => {\n  const { size, color, ...resolvedProps } = usePropsResolution('Icon', props);\n  const hexColor = useToken('colors', color || '');\n  const themeSize = parseInt(useToken('space', size || ''), 10);\n  if (!as) {\n    return <SVGIcon {...props} ref={ref} />;\n  }\n\n  const asWithProps = React.cloneElement(as, {\n    ...as.props,\n    color: hexColor,\n    size: themeSize,\n  });\n\n  return <Box {...resolvedProps}>{asWithProps}</Box>;\n};\n\nexport default memo(forwardRef(Icon));\n"]}