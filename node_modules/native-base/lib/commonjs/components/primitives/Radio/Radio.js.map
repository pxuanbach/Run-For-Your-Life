{"version":3,"sources":["Radio.tsx"],"names":["Radio","ref","icon","children","wrapperRef","props","contextState","React","useContext","RadioContext","_interactionBox","_iterationBoxPressed","_pressed","_radio","_radioChecked","_checked","_radioDisabled","_disabled","_radioInvalid","_invalid","_icon","isInvalid","iconSize","themedProps","inputRef","useRef","state","inputProps","disabled","checked","sizedIcon","cloneElement","isPressed"],"mappings":"wbAAA,qDACA,+DACA,+CACA,mDACA,2DAEA,gDACA,wCACA,qCACA,oC,iIAEA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAEZC,GAFY,CAGT,IAFDC,CAAAA,IAEC,MAFDA,IAEC,CAFKC,QAEL,MAFKA,QAEL,CAFeC,UAEf,MAFeA,UAEf,CAF8BC,KAE9B,8EACH,GAAMC,CAAAA,YAAY,CAAGC,eAAMC,UAAN,CAAiBC,wBAAjB,CAArB,CADG,wBAcC,sCAAmB,OAAnB,0BACCH,YADD,CAECD,KAFD,EAdD,2CAGDK,eAHC,CAG4BC,oBAH5B,uBAGkBC,QAHlB,CAGqDF,eAHrD,sHAIDG,MAJC,CAKWC,aALX,wBAKCC,QALD,CAMYC,cANZ,wBAMCC,SAND,CAOWC,aAPX,wBAOCC,QAPD,CAQIN,MARJ,mGAUDO,KAVC,qBAUDA,KAVC,CAWDC,SAXC,qBAWDA,SAXC,CAYDC,QAZC,qBAYDA,QAZC,CAaEC,WAbF,wHAmBH,GAAMC,CAAAA,QAAQ,CAAGjB,eAAMkB,MAAN,CAAa,IAAb,CAAjB,CAnBG,cAoBoB,qBAASpB,KAAT,CAAgBC,YAAY,CAACoB,KAA7B,CAAoCF,QAApC,CApBpB,CAoBKG,UApBL,WAoBKA,UApBL,IAqBKC,CAAAA,QArBL,CAqB2BD,UArB3B,CAqBKC,QArBL,CAqBeC,OArBf,CAqB2BF,UArB3B,CAqBeE,OArBf,CAwBH,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAEhBvB,gBAAMwB,YAAN,CAAmB7B,IAAnB,wBACEoB,QAAQ,CAARA,QADF,EAEKF,KAFL,EAFgB,EAAlB,CAOA,MACE,8BAAC,kBAAD,0BACOO,UADP,EAEE,GAAG,CAAE,qBAAU,CAAC1B,GAAD,CAAMG,UAAN,CAAV,CAFP,CAGE,iBAAiB,CAAC,OAHpB,8EAKG,eAAwB,IAArB4B,CAAAA,SAAqB,OAArBA,SAAqB,CACvB,MACE,8BAAC,cAAD,wBACE,aAAa,CAAC,KADhB,CAEE,cAAc,CAAC,SAFjB,CAGE,UAAU,CAAC,QAHb,CAIE,YAAY,CAAC,MAJf,EAKMT,WALN,gFAOE,6BAAC,cAAD,+EAEE,6BAAC,YAAD,0BACMb,eADN,CAEOsB,SAAS,EAAIrB,oBAFpB,EAGE,CAAC,CAAE,CAHL,CAIE,CAAC,CAAC,MAJJ,CAKE,MAAM,CAAC,MALT,+EAFF,CAUE,6BAAC,cAAD,0BACME,MADN,CAEOgB,OAAO,EAAIf,aAFlB,CAGOc,QAAQ,EAAIZ,cAHnB,CAIOK,SAAS,EAAIH,aAJpB,gFAMGhB,IAAI,EAAI4B,SAAR,EAAqBD,OAArB,CACCC,SAAS,EADV,CAGC,6BAAC,iBAAD,wBACE,IAAI,CAAER,QADR,EAEMF,KAFN,EAGE,OAAO,CAAES,OAAO,CAAG,CAAH,CAAO,CAHzB,+EATJ,CAVF,CAPF,CAmCG1B,QAnCH,CADF,CAuCD,CA7CH,CADF,CAiDD,CAnFD,C,aAqFe,gBAAK,sBAAWH,KAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Pressable, IPressableProps } from '../Pressable';\nimport { Center } from '../../composites/Center';\nimport Box from '../Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IRadioProps } from './types';\nimport { useRadio } from '@react-native-aria/radio';\nimport { RadioContext } from './RadioGroup';\nimport { mergeRefs } from '../../../utils';\nimport { CircleIcon } from '../Icon/Icons';\n\nconst Radio = (\n  { icon, children, wrapperRef, ...props }: IRadioProps,\n  ref: any\n) => {\n  const contextState = React.useContext(RadioContext);\n  const {\n    _interactionBox: { _pressed: _iterationBoxPressed, ..._interactionBox },\n    _radio: {\n      _checked: _radioChecked,\n      _disabled: _radioDisabled,\n      _invalid: _radioInvalid,\n      ..._radio\n    },\n    _icon,\n    isInvalid,\n    iconSize,\n    ...themedProps\n  } = usePropsResolution('Radio', {\n    ...contextState,\n    ...props,\n  });\n\n  const inputRef = React.useRef(null);\n  const { inputProps } = useRadio(props, contextState.state, inputRef);\n  const { disabled, checked } = inputProps;\n\n  // only calling below function when icon exist.\n  const sizedIcon = () =>\n    //@ts-ignore\n    React.cloneElement(icon, {\n      iconSize,\n      ..._icon,\n    });\n\n  return (\n    <Pressable\n      {...(inputProps as IPressableProps)}\n      ref={mergeRefs([ref, wrapperRef])}\n      accessibilityRole=\"radio\"\n    >\n      {({ isPressed }: any) => {\n        return (\n          <Center\n            flexDirection=\"row\"\n            justifyContent=\"center \"\n            alignItems=\"center\"\n            borderRadius=\"full\"\n            {...themedProps}\n          >\n            <Center>\n              {/* Interaction Wrapper */}\n              <Box\n                {..._interactionBox}\n                {...(isPressed && _iterationBoxPressed)}\n                p={5}\n                w=\"100%\"\n                height=\"100%\"\n              />\n              {/* radio */}\n              <Center\n                {..._radio}\n                {...(checked && _radioChecked)}\n                {...(disabled && _radioDisabled)}\n                {...(isInvalid && _radioInvalid)}\n              >\n                {icon && sizedIcon && checked ? (\n                  sizedIcon()\n                ) : (\n                  <CircleIcon\n                    size={iconSize}\n                    {..._icon}\n                    opacity={checked ? 1 : 0}\n                  />\n                )}\n              </Center>\n            </Center>\n            {/* Label */}\n            {children}\n          </Center>\n        );\n      }}\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Radio));\n"]}