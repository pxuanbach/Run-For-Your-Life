{"version":3,"sources":["NativeBaseProvider.tsx"],"names":["NativeBaseProvider","props","colorModeManager","theme","defaultTheme","children","initialWindowMetrics","defaultInitialWindowMetrics","config"],"mappings":"8KAAA,oDACA,gDACA,0EAIA,+CACA,iCAEA,uFACA,qDACA,qD,uHAUA,GAAMA,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAoC,IAE3DC,CAAAA,gBAF2D,CAMzDD,KANyD,CAE3DC,gBAF2D,cAMzDD,KANyD,CAG3DE,KAH2D,CAG3DA,KAH2D,uBAGnDC,YAHmD,cAI3DC,QAJ2D,CAMzDJ,KANyD,CAI3DI,QAJ2D,CAK3DC,oBAL2D,CAMzDL,KANyD,CAK3DK,oBAL2D,CAO7D,MACE,8BAAC,qBAAD,EAAe,KAAK,CAAEH,KAAtB,6EACE,6BAAC,4CAAD,EACE,cAAc,CAAEG,oBAAF,OAAEA,oBAAF,CAA0BC,gDAD1C,6EAGE,6BAAC,uBAAD,EACE,gBAAgB,CAAEL,gBADpB,CAEE,OAAO,CAAEC,KAAK,CAACK,MAFjB,6EAIE,6BAAC,yBAAD,+EACE,6BAAC,oBAAD,+EACE,6BAAC,kBAAD,+EAAcH,QAAd,CADF,CADF,CAJF,CAHF,CADF,CADF,CAkBD,CAzBD,C","sourcesContent":["import React from 'react';\nimport { ThemeProvider } from 'styled-components/native';\nimport {\n  SafeAreaProvider,\n  initialWindowMetrics as defaultInitialWindowMetrics,\n} from 'react-native-safe-area-context';\nimport { SSRProvider } from '@react-native-aria/utils';\nimport { theme as defaultTheme, ITheme } from './../theme';\nimport type { IColorModeProviderProps } from './color-mode';\nimport HybridProvider from './hybrid-overlay/HybridProvider';\nimport { OverlayProvider } from '@react-native-aria/overlays';\nimport { ToastProvider } from '../components/composites/Toast';\n\nexport interface NativeBaseProviderProps {\n  theme?: ITheme;\n  colorModeManager?: IColorModeProviderProps['colorModeManager'];\n  children?: React.ReactNode;\n  initialWindowMetrics?: any;\n  // Refer https://github.com/th3rdwave/react-native-safe-area-context#testing\n}\n\nconst NativeBaseProvider = (props: NativeBaseProviderProps) => {\n  const {\n    colorModeManager,\n    theme = defaultTheme,\n    children,\n    initialWindowMetrics,\n  } = props;\n  return (\n    <ThemeProvider theme={theme}>\n      <SafeAreaProvider\n        initialMetrics={initialWindowMetrics ?? defaultInitialWindowMetrics}\n      >\n        <HybridProvider\n          colorModeManager={colorModeManager}\n          options={theme.config}\n        >\n          <OverlayProvider>\n            <ToastProvider>\n              <SSRProvider>{children}</SSRProvider>\n            </ToastProvider>\n          </OverlayProvider>\n        </HybridProvider>\n      </SafeAreaProvider>\n    </ThemeProvider>\n  );\n};\n\nexport { NativeBaseProvider };\n"]}