{"version":3,"sources":["Slide.tsx"],"names":["holderStyle","top","right","left","bottom","Slide","ref","children","props","visible","in","placement","duration","React","useState","containerOpacity","setContainerOpacity","size","setSize","provideSize","layoutSize","width","height","transition","animationStyle","initial","translateY","entry","translateX","position","e","nativeEvent","layout","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport type { ISlideProps } from './types';\nimport { Transition } from './Transition';\n\nconst holderStyle: any = {\n  top: {\n    top: 0,\n    right: 0,\n    left: 0,\n  },\n  right: {\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  bottom: {\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n  },\n};\n\nconst Slide = ({ children, ...props }: ISlideProps, ref: any) => {\n  const { in: visible, placement, duration } = useThemeProps('Slide', props);\n  const [containerOpacity, setContainerOpacity] = React.useState(0);\n  const [size, setSize] = React.useState(0);\n  const provideSize = (layoutSize: any) => {\n    if (placement === 'right' || placement === 'left')\n      setSize(layoutSize.width);\n    else setSize(layoutSize.height);\n    setContainerOpacity(1);\n  };\n\n  const transition = { duration };\n\n  const animationStyle: any = {\n    top: {\n      initial: {\n        translateY: -size,\n      },\n      entry: {\n        translateY: 0,\n        transition,\n      },\n    },\n    bottom: {\n      initial: {\n        translateY: size,\n      },\n      entry: {\n        translateY: 0,\n        transition,\n      },\n    },\n    left: {\n      initial: {\n        translateX: -size,\n      },\n      entry: {\n        translateX: 0,\n        transition,\n      },\n    },\n    right: {\n      initial: {\n        translateX: size,\n      },\n      entry: {\n        translateX: 0,\n        transition,\n      },\n    },\n  };\n\n  return (\n    <Transition\n      visible={visible}\n      {...animationStyle[placement]}\n      style={[{ position: 'absolute' }, holderStyle[placement]]}\n    >\n      <Box\n        {...props}\n        opacity={containerOpacity}\n        ref={ref}\n        onLayout={(e) => provideSize(e.nativeEvent.layout)}\n      >\n        {children}\n      </Box>\n    </Transition>\n  );\n};\n\nexport default React.memo(React.forwardRef(Slide));\n"]}